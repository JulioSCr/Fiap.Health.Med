<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Fiap.Health.Med.Api</name>
    </assembly>
    <members>
        <member name="M:Fiap.Health.Med.Api.Controllers.AgendamentoController.ObterTodos">
            <summary>
            Obtém todos os agendamentos cadastrados.
            </summary>
            <returns>Uma lista de agendamentos.</returns>
        </member>
        <member name="M:Fiap.Health.Med.Api.Controllers.AgendamentoController.ObterPorId(System.Guid)">
            <summary>
            Obtém um agendamento por ID.
            </summary>
            <param name="id">O ID do agendamento a ser obtido.</param>
            <returns>O agendamento encontrado ou um erro 404 se não encontrado.</returns>
        </member>
        <member name="M:Fiap.Health.Med.Api.Controllers.AgendamentoController.ObterAgendamentoPorStatus(System.Int32)">
            <summary>
            Obtém agendamentos por status.
            </summary>
            <param name="status">O status dos agendamentos a serem obtidos.</param>
            <returns>Uma lista de agendamentos com o status especificado.</returns>
        </member>
        <member name="M:Fiap.Health.Med.Api.Controllers.AgendamentoController.Adicionar(Fiap.Health.Med.Application.Features.Agendamentos.Commands.AdicionarAgendamento.AdicionarAgendamentoCommand)">
            <summary>
            Adiciona um novo agendamento.
            </summary>
            <param name="agendamentoDTO">Os dados do agendamento a ser adicionado.</param>
            <returns>O agendamento adicionado ou um erro 400 em caso de falha na adição.</returns>
        </member>
        <member name="M:Fiap.Health.Med.Api.Controllers.AgendamentoController.Reagendar(Fiap.Health.Med.Application.Features.Agendamentos.Commands.AtualizarAgendamento.RealizarReagendamentoCommand)">
            <summary>
            Realiza um reagendamento.
            </summary>
            <param name="id">O ID do agendamento a ser reagendado.</param>
            <param name="data">A nova data de agendamento.</param>
            <returns>Um código 201 em caso de sucesso no reagendamento ou um erro 400 em caso de falha.</returns>
        </member>
        <member name="M:Fiap.Health.Med.Api.Controllers.AgendamentoController.Cancelar(Fiap.Health.Med.Application.Features.Agendamentos.Commands.RemoverAgendamento.RemoverAgendamentoCommand)">
            <summary>
            Cancela um agendamento por ID.
            </summary>
            <param name="id">O ID do agendamento a ser cancelado.</param>
            <returns>Um código 201 em caso de sucesso no cancelamento ou um erro 400 em caso de falha.</returns>
        </member>
        <member name="M:Fiap.Health.Med.Api.Controllers.AuthController.Login(Fiap.Health.Med.Application.Features.Auth.Commands.GerarJwtTokenCommand)">
            <summary>
            Autentica um usuário.
            </summary>
            <param name="usuarioLogin">Os dados de login do usuário.</param>
            <returns>Um token JWT se a autenticação for bem-sucedida ou erros em caso de falha.</returns>
        </member>
        <member name="M:Fiap.Health.Med.Api.Controllers.EspecialidadeController.ObterTodos">
            <summary>
            Obtém todas as especialidades cadastradas.
            </summary>
            <returns>Uma lista de especialidades.</returns>
        </member>
        <member name="M:Fiap.Health.Med.Api.Controllers.EspecialidadeController.ObterPorId(System.Guid)">
            <summary>
            Obtém uma especialidade por ID.
            </summary>
            <param name="id">O ID da especialidade a ser obtida.</param>
            <returns>A especialidade encontrada ou um erro 404 se não encontrada.</returns>
        </member>
        <member name="M:Fiap.Health.Med.Api.Controllers.EspecialidadeController.ObterMedicoEspecialidadePorIdMedico(System.Guid)">
            <summary>
            Obtém médicos com uma especialidade por ID de especialidade.
            </summary>
            <param name="idEspecialidade">O ID da especialidade para obter os médicos.</param>
            <returns>A especialidade com os médicos associados ou um erro 404 se não encontrada.</returns>
        </member>
        <member name="M:Fiap.Health.Med.Api.Controllers.EspecialidadeController.Adicionar(Fiap.Health.Med.Application.Features.Especialidades.Commands.AdicionarEspecialidade.AdicionarEspecialidadeCommand)">
            <summary>
            Adiciona uma nova especialidade.
            </summary>
            <param name="especialidade">Os dados da especialidade a ser adicionada.</param>
            <returns>A especialidade adicionada ou um erro 400 em caso de falha na adição.</returns>
        </member>
        <member name="M:Fiap.Health.Med.Api.Controllers.EspecialidadeController.Atualizar(Fiap.Health.Med.Application.Features.Especialidades.Commands.AtualizarEspecialidade.AtualizarEspecialidadeCommand)">
            <summary>
            Atualiza uma especialidade existente.
            </summary>
            <param name="especialidadeDTO">Os novos dados da especialidade a ser atualizada.</param>
            <returns>Um código 201 em caso de sucesso na atualização ou um erro 400 em caso de falha.</returns>
        </member>
        <member name="M:Fiap.Health.Med.Api.Controllers.EspecialidadeController.Remover(Fiap.Health.Med.Application.Features.Especialidades.Commands.RemoverEspecialidade.RemoverEspecialidadeCommand)">
            <summary>
            Remove uma especialidade por ID.
            </summary>
            <param name="id">O ID da especialidade a ser removida.</param>
            <returns>Um código 201 em caso de sucesso na remoção ou um erro 404 se não encontrada.</returns>
        </member>
        <member name="M:Fiap.Health.Med.Api.Controllers.EspecialidadeMedicoController.ObterTodos">
            <summary>
            Obtém todas as especialidades de médico cadastradas.
            </summary>
            <returns>Uma lista de especialidades de médico.</returns>
        </member>
        <member name="M:Fiap.Health.Med.Api.Controllers.EspecialidadeMedicoController.ObterPorId(System.Guid)">
            <summary>
            Obtém uma especialidade de médico por ID.
            </summary>
            <param name="id">O ID da especialidade de médico a ser obtida.</param>
            <returns>A especialidade de médico encontrada ou um erro 404 se não encontrada.</returns>
        </member>
        <member name="M:Fiap.Health.Med.Api.Controllers.EspecialidadeMedicoController.Adicionar(Fiap.Health.Med.Application.Features.EspecialidadesMedicos.Commands.AdicionarEspecialidadeMedico.AdicionarEspecialidadeMedicoCommand)">
            <summary>
            Adiciona uma nova especialidade de médico.
            </summary>
            <param name="especialidadeDTO">Os dados da especialidade de médico a ser adicionada.</param>
            <returns>A especialidade de médico adicionada ou um erro 400 em caso de falha na adição.</returns>
        </member>
        <member name="M:Fiap.Health.Med.Api.Controllers.EspecialidadeMedicoController.Atualizar(Fiap.Health.Med.Application.Features.EspecialidadesMedicos.Commands.AtualizarEspecialidadeMedico.AtualizarEspecialidadeMedicoCommand)">
            <summary>
            Atualiza uma especialidade de médico existente.
            </summary>
            <param name="especialidadeDTO">Os novos dados da especialidade de médico a ser atualizada.</param>
            <returns>Um código 201 em caso de sucesso na atualização ou um erro 400 em caso de falha.</returns>
        </member>
        <member name="M:Fiap.Health.Med.Api.Controllers.EspecialidadeMedicoController.Remover(Fiap.Health.Med.Application.Features.EspecialidadesMedicos.Commands.RemoverEspecialidadeMedico.RemoverEspecialidadeMedicoCommand)">
            <summary>
            Remove uma especialidade de médico por ID.
            </summary>
            <param name="id">O ID da especialidade de médico a ser removida.</param>
            <returns>Um código 201 em caso de sucesso na remoção ou um erro 404 se não encontrada.</returns>
        </member>
        <member name="M:Fiap.Health.Med.Api.Controllers.MedicoController.ObterTodos">
            <summary>
            Obtém todos os médicos cadastrados.
            </summary>
            <returns>Uma lista de médicos.</returns>
        </member>
        <member name="M:Fiap.Health.Med.Api.Controllers.MedicoController.ObterPorId(System.Guid)">
            <summary>
            Obtém um médico por ID.
            </summary>
            <param name="id">O ID do médico a ser obtido.</param>
            <returns>O médico encontrado ou um erro 404 se não encontrado.</returns>
        </member>
        <member name="M:Fiap.Health.Med.Api.Controllers.MedicoController.ObterMedicoEspecialidadePorIdMedico(System.Guid)">
            <summary>
            Obtém as especialidades de um médico por ID do médico.
            </summary>
            <param name="idMedico">O ID do médico para obter as especialidades.</param>
            <returns>O médico com suas especialidades ou um erro 404 se não encontrado.</returns>
        </member>
        <member name="M:Fiap.Health.Med.Api.Controllers.MedicoController.ObterAgendamentoPorMedico(System.Guid)">
            <summary>
            Obtém os agendamentos de um médico por ID do médico.
            </summary>
            <param name="idMedico">O ID do médico para obter os agendamentos.</param>
            <returns>O médico com seus agendamentos ou um erro 404 se não encontrado.</returns>
        </member>
        <member name="M:Fiap.Health.Med.Api.Controllers.MedicoController.Adicionar(Fiap.Health.Med.Application.Features.Medicos.Commands.AdicionarMedico.AdicionarMedicoCommand)">
            <summary>
            Adiciona um novo médico.
            </summary>
            <param name="medicoDTO">Os dados do médico a ser adicionado.</param>
            <returns>O médico adicionado ou um erro 400 em caso de falha na adição.</returns>
        </member>
        <member name="M:Fiap.Health.Med.Api.Controllers.MedicoController.Atualizar(Fiap.Health.Med.Application.Features.Medicos.Commands.AtualizarMedico.AtualizarMedicoCommand)">
            <summary>
            Atualiza um médico existente.
            </summary>
            <param name="medicoDTO">Os novos dados do médico a ser atualizado.</param>
            <returns>Um código 201 em caso de sucesso na atualização ou um erro 400 em caso de falha.</returns>
        </member>
        <member name="M:Fiap.Health.Med.Api.Controllers.MedicoController.Remover(Fiap.Health.Med.Application.Features.Medicos.Commands.RemoverMedico.RemoverMedicoCommand)">
            <summary>
            Remove um médico por ID.
            </summary>
            <param name="id">O ID do médico a ser removido.</param>
            <returns>Um código 201 em caso de sucesso na remoção ou um erro 404 se não encontrado.</returns>
        </member>
        <member name="M:Fiap.Health.Med.Api.Controllers.PacienteController.ObterTodos">
            <summary>
            Obtém todos os pacientes cadastrados.
            </summary>
            <returns>Uma lista de pacientes.</returns>
        </member>
        <member name="M:Fiap.Health.Med.Api.Controllers.PacienteController.ObterPorId(System.Guid)">
            <summary>
            Obtém um paciente por ID.
            </summary>
            <param name="id">O ID do paciente a ser obtido.</param>
            <returns>O paciente encontrado ou um erro 404 se não encontrado.</returns>
        </member>
        <member name="M:Fiap.Health.Med.Api.Controllers.PacienteController.ObterAgendamentoPorPaciente(System.Guid)">
            <summary>
            Obtém os agendamentos de um paciente por ID do paciente.
            </summary>
            <param name="idPaciente">O ID do paciente para obter os agendamentos.</param>
            <returns>O paciente com seus agendamentos ou um erro 404 se não encontrado.</returns>
        </member>
        <member name="M:Fiap.Health.Med.Api.Controllers.PacienteController.Adicionar(Fiap.Health.Med.Application.Features.Pacientes.Commands.AdicionarPaciente.AdicionarPacienteCommand)">
            <summary>
            Adiciona um novo paciente.
            </summary>
            <param name="pacienteDTO">Os dados do paciente a ser adicionado.</param>
            <returns>O paciente adicionado ou um erro 400 em caso de falha na adição.</returns>
        </member>
        <member name="M:Fiap.Health.Med.Api.Controllers.PacienteController.Atualizar(Fiap.Health.Med.Application.Features.Pacientes.Commands.AtualizarPaciente.AtualizarPacienteCommand)">
            <summary>
            Atualiza um paciente existente.
            </summary>
            <param name="pacienteDTO">Os novos dados do paciente a ser atualizado.</param>
            <returns>Um código 201 em caso de sucesso na atualização ou um erro 400 em caso de falha.</returns>
        </member>
        <member name="M:Fiap.Health.Med.Api.Controllers.PacienteController.Remover(Fiap.Health.Med.Application.Features.Pacientes.Commands.RemoverPaciente.RemoverPacienteCommand)">
            <summary>
            Remove um paciente por ID.
            </summary>
            <param name="id">O ID do paciente a ser removido.</param>
            <returns>Um código 201 em caso de sucesso na remoção ou um erro 404 se não encontrado.</returns>
        </member>
    </members>
</doc>
